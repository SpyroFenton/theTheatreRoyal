<diagram program="umletino" version="15.0.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>1194</x><y>110</y><w>280</w><h>290</h></coordinates><panel_attributes>Show
--
models the concept of a show production.
A show can have multiple performances
of itself.
--
Int showProductionID 
String showName
String showType
String showDescription
Int duration;
boolean liveAccompaniment
Double stallsPrice
Double circlePrice
ArrayList&lt;Performer? performers
--
+getters and setters
+addPerformer
+getRegularPerformers
+getMusicPerformers

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1314</x><y>770</y><w>210</w><h>250</h></coordinates><panel_attributes>User
--
models the concept of the User who is using the program
to buy tickets for performances
--
String fName
String lName
String addressLine1
String addressLine2
String city
String postcode
String email
String phoneNo
String ccNo
boolean isEmployee
--
+getters and setters
+setters()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1224</x><y>460</y><w>240</w><h>110</h></coordinates><panel_attributes>Performer
--
models the concept of a performer of a show
--
String name
int performerID
boolean isMusic
--
+getters and setters</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1624</x><y>460</y><w>330</w><h>240</h></coordinates><panel_attributes>Ticket
--
models the concept of a ticket. A User may buy multiple
tickets of different or similar performances.
--
int transactionID
String performanceID
String showName
final String location = "The Theatre Royal"
Double price
String startTime
String date;
String seatType;
String concession;
String collectionID;
--
+getters and setters</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1674</x><y>770</y><w>250</w><h>270</h></coordinates><panel_attributes>Basket
--
models the concept of a basket. A basket may hold
an infinite number of tickets which the User
has purchased
--
ArrayList&lt;Ticket&gt; tickets
Double basketTotal
Boolean postage;
--
+addTicket
+getBasketTotal
+getPostage
+checkPostageApplies
+clearBasket
+getTotalTickets
+getStallSeats
+getCircleSeats
+setTransactionID



</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1584</x><y>120</y><w>280</w><h>250</h></coordinates><panel_attributes>Performance
--
models the concept of a performance of a show
Each performance will be responsible for 
variable details such as seat availability
--
int productionID
int performanceID
String date
String startTime
int circleAvailable
int stallsAvailable
--
+getters and setters

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1464</x><y>180</y><w>140</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;40;120;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1314</x><y>390</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1734</x><y>360</y><w>80</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>60;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1514</x><y>890</y><w>180</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>160;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>1764</x><y>690</y><w>60</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>40;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>404</x><y>90</y><w>210</w><h>100</h></coordinates><panel_attributes>Front End Controller
--
handles the initial user interaction
and the start of the program</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>124</x><y>290</y><w>210</w><h>100</h></coordinates><panel_attributes>InputReader
--
Takes data from the user to parse in 
to the backendcontroller</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>804</x><y>270</y><w>210</w><h>210</h></coordinates><panel_attributes>Back End Controller
--
handles the actual program and 
referencing the queries from the dbconn
and the choices of the user scanned
from the InputReader
--
methods for the system/program</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>324</x><y>340</y><w>500</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>480;40;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>604</x><y>170</y><w>280</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;260;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>664</x><y>510</y><w>210</w><h>210</h></coordinates><panel_attributes>DB Connector
--
handles the transfer of data between
the program and the SQL database
Login details/connection details
will be read of a credentials.txt
file initially. This may be changed based
on how we wish users to access the program and how data is updated or
retrieved.
--
databaseConnection String
username String
password String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>684</x><y>790</y><w>140</w><h>30</h></coordinates><panel_attributes>SQL DATABASE
bg=blue</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>734</x><y>710</y><w>40</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>20;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>754</x><y>470</y><w>170</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>150;10;10;40</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>104</x><y>40</y><w>530</w><h>390</h></coordinates><panel_attributes>FrontEnd
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLPackage</id><coordinates><x>644</x><y>50</y><w>1340</w><h>1030</h></coordinates><panel_attributes>BackEnd
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1004</x><y>420</y><w>190</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;170;10</additional_attributes></element><element><id>UMLPackage</id><coordinates><x>1174</x><y>80</y><w>800</w><h>990</h></coordinates><panel_attributes>Model
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>854</x><y>740</y><w>280</w><h>330</h></coordinates><panel_attributes>Utility package
--
Will include utility classes that all backend model
classes and backend controller can access to help
with the handling of data. Such will include:
--
InputValidator
	for checking certain data like credit cards
	are okay
String Formatter
	for formatting strings
InputReader
	will be stored here also even though it is FrontEnd
TimeStamp
	for getting current time in timestamp form
	for the database
DB Connector
	will also be stored here
Enum Concessions class
	for storing variable data around concessions
	this is mainly for flexibility for the future
	development of the software program</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>934</x><y>470</y><w>90</w><h>290</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;70;270</additional_attributes></element></diagram>